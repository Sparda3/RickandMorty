{"ast":null,"code":"import { ADD_FAV, FILTER, ORDER, REMOVE_FAV } from \"./action-types\";\nconst initialState = {\n  myFavorites: [],\n  // [char1, char2, char3]\n  allCharacters: []\n};\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_FAV:\n      // return {\n      //   ...state,\n      //   allCharacters: [...state.allCharacters, action.payload],\n      //   myFavorites: [...state.myFavorites, action.payload],\n      // };\n      return {\n        ...state,\n        myFavorites: action.payload,\n        allCharacters: action.payload\n      };\n    case REMOVE_FAV:\n      // return {\n      //   ...state,\n      //   myFavorites: state.myFavorites.filter(\n      //     (char) => char.id !== action.payload\n      //   ), // [char1, cha2] eliminamos char3\n      // };\n      return {\n        ...state,\n        myFavorites: action.payload\n      };\n    case FILTER:\n      const filterByGender = state.allCharacters.filter(char => {\n        if (char.gender === action.payload) {\n          return true;\n        } else if (action.payload === \"Todos\") {\n          return true;\n        }\n        return false;\n      });\n      return {\n        ...state,\n        myFavorites: filterByGender\n      };\n    // case FILTER:\n    //     return {...state, favorites: state.allCharacters.filter(char => {\n    //         if(char.gender === action.payload){\n    //             return true\n    //         } else if(action.payload === 'Todos'){\n    //             return true;\n    //         }\n    //     })}\n    case ORDER:\n      // let ordered;\n      //\n      // if(action.payload === 'A') {\n      //     ordered = state.allCharacters.sort((a,b) => {return a.id - b.id;});\n      //     } else {ordered = state.allCharacters.sort((a,b) => {return b.id - a.id;});\n      //     }\n      const ordered = state.allCharacters.sort((a, b) => {\n        if (action.payload === \"A\") {\n          return a.id - b.id;\n        } else if (action.payload === \"D\") {\n          return b.id - a.id;\n        }\n        return 0;\n      });\n      return {\n        ...state,\n        myFavorites: ordered\n      };\n    default:\n      return state;\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["ADD_FAV","FILTER","ORDER","REMOVE_FAV","initialState","myFavorites","allCharacters","rootReducer","state","action","type","payload","filterByGender","filter","char","gender","ordered","sort","a","b","id"],"sources":["C:/Users/Maria Gabriela/Desktop/HENRY/proyecto rick/rick_and_morty/Client/src/Redux/reducer.js"],"sourcesContent":["import { ADD_FAV, FILTER, ORDER, REMOVE_FAV } from \"./action-types\";\n\nconst initialState = {\n  myFavorites: [], // [char1, char2, char3]\n  allCharacters: [],\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_FAV:\n      // return {\n      //   ...state,\n      //   allCharacters: [...state.allCharacters, action.payload],\n      //   myFavorites: [...state.myFavorites, action.payload],\n      // };\n      return {\n        ...state,\n        myFavorites: action.payload,\n        allCharacters: action.payload,\n      };\n    case REMOVE_FAV:\n      // return {\n      //   ...state,\n      //   myFavorites: state.myFavorites.filter(\n      //     (char) => char.id !== action.payload\n      //   ), // [char1, cha2] eliminamos char3\n      // };\n      return { ...state, myFavorites: action.payload };\n    case FILTER:\n      const filterByGender = state.allCharacters.filter((char) => {\n        if (char.gender === action.payload) {\n          return true;\n        } else if (action.payload === \"Todos\") {\n          return true;\n        }\n        return false;\n      });\n      return {\n        ...state,\n        myFavorites: filterByGender,\n      };\n    // case FILTER:\n    //     return {...state, favorites: state.allCharacters.filter(char => {\n    //         if(char.gender === action.payload){\n    //             return true\n    //         } else if(action.payload === 'Todos'){\n    //             return true;\n    //         }\n    //     })}\n    case ORDER:\n      // let ordered;\n      //\n      // if(action.payload === 'A') {\n      //     ordered = state.allCharacters.sort((a,b) => {return a.id - b.id;});\n      //     } else {ordered = state.allCharacters.sort((a,b) => {return b.id - a.id;});\n      //     }\n      const ordered = state.allCharacters.sort((a, b) => {\n        if (action.payload === \"A\") {\n          return a.id - b.id;\n        } else if (action.payload === \"D\") {\n          return b.id - a.id;\n        }\n        return 0;\n      });\n      return {\n        ...state,\n        myFavorites: ordered,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,MAAM,EAAEC,KAAK,EAAEC,UAAU,QAAQ,gBAAgB;AAEnE,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,EAAE;EAAE;EACjBC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGJ,YAAY,EAAEK,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKV,OAAO;MACV;MACA;MACA;MACA;MACA;MACA,OAAO;QACL,GAAGQ,KAAK;QACRH,WAAW,EAAEI,MAAM,CAACE,OAAO;QAC3BL,aAAa,EAAEG,MAAM,CAACE;MACxB,CAAC;IACH,KAAKR,UAAU;MACb;MACA;MACA;MACA;MACA;MACA;MACA,OAAO;QAAE,GAAGK,KAAK;QAAEH,WAAW,EAAEI,MAAM,CAACE;MAAQ,CAAC;IAClD,KAAKV,MAAM;MACT,MAAMW,cAAc,GAAGJ,KAAK,CAACF,aAAa,CAACO,MAAM,CAAEC,IAAI,IAAK;QAC1D,IAAIA,IAAI,CAACC,MAAM,KAAKN,MAAM,CAACE,OAAO,EAAE;UAClC,OAAO,IAAI;QACb,CAAC,MAAM,IAAIF,MAAM,CAACE,OAAO,KAAK,OAAO,EAAE;UACrC,OAAO,IAAI;QACb;QACA,OAAO,KAAK;MACd,CAAC,CAAC;MACF,OAAO;QACL,GAAGH,KAAK;QACRH,WAAW,EAAEO;MACf,CAAC;IACH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,KAAKV,KAAK;MACR;MACA;MACA;MACA;MACA;MACA;MACA,MAAMc,OAAO,GAAGR,KAAK,CAACF,aAAa,CAACW,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACjD,IAAIV,MAAM,CAACE,OAAO,KAAK,GAAG,EAAE;UAC1B,OAAOO,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE;QACpB,CAAC,MAAM,IAAIX,MAAM,CAACE,OAAO,KAAK,GAAG,EAAE;UACjC,OAAOQ,CAAC,CAACC,EAAE,GAAGF,CAAC,CAACE,EAAE;QACpB;QACA,OAAO,CAAC;MACV,CAAC,CAAC;MACF,OAAO;QACL,GAAGZ,KAAK;QACRH,WAAW,EAAEW;MACf,CAAC;IACH;MACE,OAAOR,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}